version: "3.7"

services:
    #
    # ZIPKIN SERVICE
    #
    zipkin:
        image: openzipkin/zipkin
        container_name: zipkin
        ports:
            - "9411:9411"

    #
    # SONARQUBE SERVICE
    #
    sonarqubedb:
        image: postgres:12
        hostname: postgresql
        container_name: postgresql
        environment:
            POSTGRES_USER: sonar
            POSTGRES_PASSWORD: sonar
            POSTGRES_DB: sonar
        volumes:
            - postgresql:/var/lib/postgresql
            - postgresql_data:/var/lib/postgresql/data

    sonarqube:
        image: sonarqube:community
        hostname: sonarqube
        container_name: sonarqube
        depends_on:
            - sonarqubedb
        environment:
            SONAR_JDBC_URL: jdbc:postgresql://sonarqubedb:5432/sonar
            SONAR_JDBC_USERNAME: sonar
            SONAR_JDBC_PASSWORD: sonar
        volumes:
            - sonarqube_data:/opt/sonarqube/data
            - sonarqube_extensions:/opt/sonarqube/extensions
            - sonarqube_logs:/opt/sonarqube/logs
        ports:
            - "9000:9000"

    #
    # ELASTIC STACK
    #
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
        container_name: elasticsearch
        ports: ['9200:9200']
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=false
        volumes:
            - './configuration/elasticsearch:/usr/share/elasticsearch/data'

    logstash:
        image: docker.elastic.co/logstash/logstash:8.3.3
        container_name: logstash
        volumes:
            - ./configuration/logstash/pipeline:/usr/share/logstash/pipeline:ro
        ports:
            - "5000:5000/tcp"
            - "9600:9600"
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        depends_on:
            - elasticsearch

    kibana:
        image: docker.elastic.co/kibana/kibana:8.3.3
        ports: [ '5601:5601' ]
        depends_on:
            - 'elasticsearch'

    #
    # MESSAGE BROKER
    #
    rabbitmq:
        image: rabbitmq:3.9.11-management-alpine
        container_name: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"

volumes:
    sonarqube_data: { }
    sonarqube_extensions: { }
    sonarqube_logs: { }
    postgresql: {}
    postgresql_data: {}